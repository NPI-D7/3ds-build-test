


trigger:
  branches:
    include: ['*']
    exclude: [leafedit-changes, cleanup]
  tags:
    include: ['*']

name:  $[format('{0:yyyyMMdd\-HHmmss}', pipeline.startTime)]

variables:
  REPOSITORY_NAME: $(Build.Repository.Name)
  DEVKITPRO: /opt/devkitpro
  DEVKITARM: /opt/devkitpro/devkitARM

jobs:
################################################################################

  - job: build3DS
    displayName: "Build 3DS version"
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
########################################
    - script: |
        sudo apt update
        sudo apt install haveged p7zip-full
        curl -L https://github.com/devkitPro/pacman/releases/download/devkitpro-pacman-1.0.1/devkitpro-pacman.deb -o pacman.deb
        sudo dpkg -i pacman.deb
        sudo dkp-pacman -Sy
        sudo dkp-pacman -S 3ds-dev 3ds-curl 3ds-libarchive 3ds-liblzma 3ds-mbedtls 3ds-bzip2 3ds-zlib 3ds-sdl 3ds-sdl_mixer 3ds-mpg123 --noconfirm
        curl -L https://github.com/Steveice10/bannertool/releases/download/1.1.0/bannertool.zip -o bannertool.zip
        sudo 7z e bannertool.zip linux-x86_64/bannertool
        sudo chmod +x bannertool
        rm bannertool.zip
        curl -L https://github.com/profi200/Project_CTR/releases/download/0.15/makerom_015_ctrtool.zip -o makerom_015_ctrtool.zip
        sudo 7z e makerom_015_ctrtool.zip Linux_x86_64/makerom
        sudo chmod +x makerom
        rm makerom_015_ctrtool.zip
        sudo mv makerom /opt/devkitpro/tools/bin
        sudo mv bannertool /opt/devkitpro/tools/bin
      displayName: 'Setup environment'
########################################
    - script: |
        make
        
        mv 3ds/Test.3dsx $(Build.ArtifactStagingDirectory)
      displayName: 'Build Test'
########################################
   

    displayName: "Publish builds"
    dependsOn:
     
      - build3DS
      
    condition: succeeded('build3DS'), not(startsWith(variables['Build.SourceBranch'], 'refs/pull')))
    variables:
      COMMIT_TAG: $[ dependencies.buildDS.outputs['buildDS.COMMIT_TAG'] ]
      COMMIT_MESSAGE: $[ dependencies.buildDS.outputs['buildDS.COMMIT_MESSAGE'] ]

    steps:
########################################
      - task: DownloadBuildArtifacts@0
        inputs:
          downloadPath: $(Build.ArtifactStagingDirectory)
          artifactName: 'build3DS'
        displayName: "Retrieving artifacts from 3DS build"
########################################

      - script: |
          sudo apt install qrencode
          export CURRENT_DATE=$(date +"%Y%m%d-%H%M%S")
          echo '##vso[task.setvariable variable=CURRENT_DATE]'$CURRENT_DATE
          echo '##vso[task.setvariable variable=CURRENT_DATE;isOutput=true]'$CURRENT_DATE
         
          git config --global user.name "TWLBot"
          git clone https://$GITHUB_TOKEN@github.com/NPXTobi/update-builds.git
          cd update-builds/builds
         
          cp $(Build.ArtifactStagingDirectory)/*/* .
          git stage .
          git commit -m "Test | $(COMMIT_TAG)"
          git push origin master
          git tag v$CURRENT_DATE
          echo '##vso[task.setvariable variable=update-builds_COMMIT]'$(git log -1 --format="%H")
        name: commit
        displayName: "Commit to NPXTobi/update-builds"
########################################
      - task: GitHubRelease@0
        displayName: "Release to NPXTobi/update-builds"
        inputs:
          gitHubConnection: TWLBot
          repositoryName: NPXTobi/update-builds
          action: create
          target: $(update-builds_COMMIT)
          tagSource: 'manual'
          tag: v$(CURRENT_DATE)
          title: Test | $(COMMIT_TAG)
          releaseNotesSource: input
          releaseNotes: $(COMMIT_MESSAGE)
          assets: '$(Build.ArtifactStagingDirectory)/*/*'
          isPreRelease: true
          addChangeLog: false
########################################
      - task: GitHubRelease@0
        displayName: "Release to NPXTobi/Test"
        condition: startsWith(variables['Build.SourceBranchName'], 'v')
        inputs:
          gitHubConnection: TWLBot
          repositoryName: NPXTobi/Test
          action: edit
          target: '$(Build.SourceVersion)'
          tag: $(Build.SourceBranchName)
          assets: '$(Build.ArtifactStagingDirectory)/*/*'
################################################################################
 
